\documentclass[11pt]{article}
\usepackage[a4paper,margin=25mm]{geometry}
\usepackage{fontspec}
{% set default_body_font = "Latin Modern Roman" %}
{% set body_font = metadata.body_font | default(default_body_font, true) %}
{% set body_font_candidates = namespace(values=[]) %}
{% for candidate in [
  body_font,
  "Latin Modern Roman",
  "TeX Gyre Termes",
  "TeX Gyre Pagella",
  "TeX Gyre Heros",
  "Times New Roman",
  "Times",
  "Helvetica Neue",
  "Helvetica",
  "Arial",
  "Arial Unicode MS"
] %}
  {% if candidate %}
    {% set value = candidate | string | trim %}
    {% if value and value not in body_font_candidates.values %}
      {% set _ = body_font_candidates.values.append(value) %}
    {% endif %}
  {% endif %}
{% endfor %}

{% set title_font_candidate = metadata.title_font | default(body_font, true) %}
{% set title_font_candidates = namespace(values=[]) %}
{% for candidate in [
  title_font_candidate,
  body_font,
  default_body_font,
  "TeX Gyre Termes",
  "TeX Gyre Pagella",
  "Montserrat",
  "Helvetica Neue",
  "Helvetica",
  "Arial",
  "Arial Unicode MS",
  "Times New Roman",
  "Times"
] %}
  {% if candidate %}
    {% set value = candidate | string | trim %}
    {% if value and value not in title_font_candidates.values %}
      {% set _ = title_font_candidates.values.append(value) %}
    {% endif %}
  {% endif %}
{% endfor %}

{% macro font_fallback(fonts, command_template, warning=None, fallback_command='') -%}
{% set sanitized = namespace(items=[]) %}
{% for font in fonts %}
  {% if font %}
    {% set cleaned = font | string | trim %}
    {% if cleaned %}
      {% set escaped = cleaned | latex_escape %}
      {% if escaped not in sanitized.items %}
        {% set _ = sanitized.items.append(escaped) %}
      {% endif %}
    {% endif %}
  {% endif %}
{% endfor %}
{% set count = sanitized.items | length %}
{% set fallback_clean = fallback_command | default('', true) | trim %}
{% if count > 0 %}
{% for font in sanitized.items %}
  {% set formatted_command = command_template | replace('__FONT__', font) | trim %}
\IfFontExistsTF{ {{- font | trim -}} }{
  {{ formatted_command }}
}{
{% endfor %}
  {% if warning %}
  \PackageWarning{markdownpdf}{ {{ warning | latex_escape }} }
  {% endif %}
  {{ fallback_clean }}
{% for _ in range(count) %}
}
{% endfor %}
{% else %}
  {% if warning %}
  \PackageWarning{markdownpdf}{ {{ warning | latex_escape }} }
  {% endif %}
  {{ fallback_clean }}
{% endif %}
{%- endmacro %}

\providecommand{\MarkdownPDFMainFontName}{Latin Modern Roman}
{{ font_fallback(
  body_font_candidates.values,
  '\\setmainfont{__FONT__}\\renewcommand{\\MarkdownPDFMainFontName}{__FONT__}',
  'Aucune police principale candidate ne peut etre chargee; utilisation des reglages par defaut.'
) }}

{{ font_fallback(
  title_font_candidates.values,
  '\\newfontfamily\\MarkdownPDFTitleFont{__FONT__}',
  'Aucune police de titre candidate ne peut etre chargee; utilisation de la famille par defaut.',
  '\\newcommand{\\MarkdownPDFTitleFont}{\\rmfamily}'
) }}
\usepackage{graphicx}
\usepackage{float}
\floatplacement{figure}{H}
\floatplacement{table}{H}
\usepackage{babel}
\usepackage[autostyle=true]{csquotes}
\usepackage{hyperref}
\usepackage{fancyhdr}
\usepackage{lastpage}
\usepackage{xcolor}
\usepackage{setspace}
\usepackage{listings}
\usepackage{amssymb}
\usepackage{longtable,booktabs,array}
\usepackage{calc}
\usepackage{etoolbox}
\usepackage{enumitem}
\usepackage{colortbl}
\usepackage{sectsty}
\usepackage{titlesec}
\definecolor{MarkdownPDFTitleColor}{HTML}{000000}
\definecolor{MarkdownPDFLinkColor}{HTML}{1A6FB3}
\definecolor{MarkdownPDFMutedText}{HTML}{7A7A7A}
{% set raw_accent_color = metadata.title_color | default("#0F4C81", true) %}
{% if "#" in raw_accent_color %}
\definecolor{MarkdownPDFAccentColor}{HTML}{ {{- raw_accent_color.replace('#', '') | upper -}} }
{% else %}
\colorlet{MarkdownPDFAccentColor}{ {{- raw_accent_color | latex_escape -}} }
{% endif %}

\titleformat{\section}
  {\color{MarkdownPDFTitleColor}\MarkdownPDFTitleFont\Large\bfseries}
  {\thesection}
  {1em}
  {}
  [{\vspace{-1em}\color{MarkdownPDFAccentColor}\rule{\linewidth}{0.1pt}}]
\titlespacing*{\section}{0pt}{0em}{0em}

\titleformat{\subsection}
  {\color{MarkdownPDFTitleColor}\MarkdownPDFTitleFont\large\bfseries}
  {\thesubsection}
  {1em}
  {}
\titlespacing*{\subsection}{0pt}{1.2em}{0.6em}

\titleformat{\subsubsection}
  {\color{MarkdownPDFTitleColor}\MarkdownPDFTitleFont\normalsize\bfseries}
  {\thesubsubsection}
  {1em}
  {}
\titlespacing*{\subsubsection}{0pt}{1em}{0.5em}

{% raw %}
\providecommand{\passthrough}[1]{#1}
{% endraw %}
{% raw %}
\providecommand{\pandocbounded}[2][]{#2}
{% endraw %}
\lstset{
  basicstyle=\ttfamily\small,
  breaklines=true,
  columns=fullflexible,
  frame=single,
  framerule=0pt,
  backgroundcolor=\color[gray]{0.95},
  showstringspaces=false
}

\providecommand{\tightlist}{
  \setlength{\itemsep}{0pt}
  \setlength{\parskip}{0pt}
}

\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
\def\maxheight{\ifdim\Gin@nat@height>\textheight\textheight\else\Gin@nat@height\fi}
\makeatother
\setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
\makeatletter
\def\fps@figure{htbp}
\makeatother

\setlist[itemize]{leftmargin=*, labelsep=0.5em}
\setlist[enumerate]{leftmargin=*, labelsep=0.5em}
\setlist[description]{leftmargin=*, labelsep=0.5em}

\definecolor{MarkdownPDFTableAltRow}{HTML}{FAFBFD}
\definecolor{MarkdownPDFTableRule}{HTML}{D6DFEB}

\setlength{\tabcolsep}{6pt}
\renewcommand{\arraystretch}{1.15}
\setlength{\LTleft}{\fill}
\setlength{\LTright}{\fill}

\newcommand{\MarkdownPDFSetupTable}{
  \rowcolors{2}{MarkdownPDFTableAltRow}{white}% alterner sur les lignes de données, en laissant l'entête intacte
  \arrayrulecolor{MarkdownPDFTableRule}
}

\AtBeginEnvironment{longtable}{
  \MarkdownPDFSetupTable
}

\AfterEndEnvironment{longtable}{
  \rowcolors{2}{white}{white}% réinitialiser pour les tableaux suivants
  \arrayrulecolor{black}
}

% Longtable fixes inspired by Pandoc's default template
\makeatletter
\patchcmd\longtable{\par}{\if@noskipsec\mbox{}\fi\par}{}{}
\makeatother
\IfFileExists{footnotehyper.sty}{\usepackage{footnotehyper}}{\usepackage{footnote}}
\makesavenoteenv{longtable}

\setlength{\emergencystretch}{2em}

\pagestyle{fancy}
\fancyhf{}

\hypersetup{
  colorlinks=true,
  linkcolor=MarkdownPDFLinkColor,
  urlcolor=MarkdownPDFLinkColor,
  citecolor=MarkdownPDFLinkColor,
  pdfborder={0 0 0}
}

% Header configuration
\newcommand{\MarkdownPDFHeaderInfo}{
  \begingroup
  \color{MarkdownPDFMutedText}\footnotesize
  {% set header_lines = [] %}
  {% if metadata.author %}
    {% set _ = header_lines.append(metadata.author | latex_escape) %}
  {% endif %}
  {% if metadata.address %}
    {% set _ = header_lines.append(metadata.address | latex_escape) %}
  {% endif %}
  {% if metadata.contact %}
    {% set _ = header_lines.append(metadata.contact | latex_escape) %}
  {% endif %}
  {% for line in header_lines %}
    {{ line }}{% if not loop.last %}\\[0.15em]{% endif %}
  {% endfor %}
  \endgroup
}


\fancyhead[L]{\ignorespaces
  \begin{minipage}[c]{0.48\textwidth}%
  \raggedright
  {% if metadata.logo_path %}
    \vspace{0.1em}%
    \includegraphics[height=1.2cm]{ {{ metadata.logo_path | latex_escape }} }%
  {% else %}
    {\color{MarkdownPDFTitleColor}\MarkdownPDFTitleFont\Large {{ metadata.title | default(metadata.company, true) | latex_escape }}}
  {% endif %}
  \end{minipage}%
}
\fancyhead[R]{\ignorespaces
  \begin{minipage}[c]{0.48\textwidth}%
  \raggedleft
  \MarkdownPDFHeaderInfo
  \end{minipage}%
}

{% raw %}
\makeatletter
\renewcommand{\headrule}{%
  \if@fancyplain\let\headrulewidth\plainheadrulewidth\fi
  \vspace{4pt}%
  {\color{MarkdownPDFMutedText}\hrule height 0.2pt width \headwidth}%
  \vspace{6pt}%
}
\makeatother
\renewcommand{\headrulewidth}{0pt}
{% endraw %}

% Footer configuration
\fancyfoot[L]{}
\fancyfoot[C]{
  \parbox[b]{0.6\textwidth}{\centering\scriptsize\itshape\color{MarkdownPDFMutedText}{Les informations contenues dans ce document sont strictement confidentielles et ne doivent en aucun cas êtres divulguées.}}
}
\fancyfoot[R]{\footnotesize\color{MarkdownPDFMutedText}{Page \thepage{} / {\color{MarkdownPDFAccentColor}\pageref{LastPage}}}}

{% if preamble %}
% Extra preamble
{{ preamble }}
{% endif %}

\setlength{\headheight}{46pt}
\setlength{\parskip}{0.8em}
\setlength{\parindent}{0pt}

\begin{document}

\onehalfspacing

{% set cover_enabled = show_cover | default(true) %}
{% set toc_enabled = show_toc | default(true) %}
{% set toc_present = toc_entries and toc_enabled %}

{% if cover_enabled or toc_present %}
\pagenumbering{gobble}
{% endif %}

{% if cover_enabled %}
{% include 'cover.tex.j2' %}
\clearpage
{% endif %}

{% if toc_present %}
\thispagestyle{empty}
{% include 'toc.tex.j2' %}
\clearpage
{% endif %}

\pagenumbering{arabic}
\setcounter{page}{1}
\pagestyle{fancy}

{{ body | safe }}

\end{document}
